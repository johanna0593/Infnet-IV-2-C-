// <auto-generated />
using System;
using AT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AT.Migrations
{
    [DbContext(typeof(ATContext))]
    partial class ATContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AT.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice.fernandes@email.com",
                            EnderecoId = 1,
                            Nome = "Alice Fernandes"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bruno.martins@email.com",
                            EnderecoId = 2,
                            Nome = "Bruno Martins"
                        },
                        new
                        {
                            Id = 3,
                            Email = "carla.ribeiro@email.com",
                            EnderecoId = 3,
                            Nome = "Carla Ribeiro"
                        },
                        new
                        {
                            Id = 4,
                            Email = "diego.souza@email.com",
                            EnderecoId = 4,
                            Nome = "Diego Souza"
                        },
                        new
                        {
                            Id = 5,
                            Email = "elaine.costa@email.com",
                            EnderecoId = 5,
                            Nome = "Elaine Costa"
                        });
                });

            modelBuilder.Entity("AT.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacoteTuristicoId")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Destinos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Coliseu",
                            Pais = "Itália"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Acrópole",
                            Pais = "Grécia"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Torre Eiffel",
                            Pais = "França"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Machu Picchu",
                            Pais = "Peru"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Grand Canyon",
                            Pais = "Estados Unidos"
                        });
                });

            modelBuilder.Entity("AT.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "São Paulo",
                            Rua = "Rua das Palmeiras, 123"
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "Rio de Janeiro",
                            Rua = "Avenida Brasil, 456"
                        },
                        new
                        {
                            Id = 3,
                            Cidade = "Curitiba",
                            Rua = "Rua XV de Novembro, 789"
                        },
                        new
                        {
                            Id = 4,
                            Cidade = "Porto Alegre",
                            Rua = "Rua Sete de Setembro, 101"
                        },
                        new
                        {
                            Id = 5,
                            Cidade = "Belo Horizonte",
                            Rua = "Avenida Afonso Pena, 202"
                        });
                });

            modelBuilder.Entity("AT.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadeMaxima = 25,
                            DataInicio = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 1200.50m,
                            Titulo = "Descubra Roma"
                        },
                        new
                        {
                            Id = 2,
                            CapacidadeMaxima = 20,
                            DataInicio = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 1500.00m,
                            Titulo = "Encantos da Grécia"
                        },
                        new
                        {
                            Id = 3,
                            CapacidadeMaxima = 30,
                            DataInicio = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 1800.75m,
                            Titulo = "Paris Romântica"
                        },
                        new
                        {
                            Id = 4,
                            CapacidadeMaxima = 15,
                            DataInicio = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 2200.99m,
                            Titulo = "Aventura nos Andes"
                        },
                        new
                        {
                            Id = 5,
                            CapacidadeMaxima = 18,
                            DataInicio = new DateTime(2025, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 2000.00m,
                            Titulo = "Explorando o Oeste Americano"
                        });
                });

            modelBuilder.Entity("AT.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataReserva = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 2
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            DataReserva = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            DataReserva = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClienteId = 4,
                            DataReserva = new DateTime(2025, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 5
                        },
                        new
                        {
                            Id = 5,
                            ClienteId = 5,
                            DataReserva = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PacoteTuristicoId = 4
                        });
                });

            modelBuilder.Entity("AT.Models.Cliente", b =>
                {
                    b.HasOne("AT.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("AT.Models.Destino", b =>
                {
                    b.HasOne("AT.Models.PacoteTuristico", null)
                        .WithMany("Destinos")
                        .HasForeignKey("PacoteTuristicoId");
                });

            modelBuilder.Entity("AT.Models.Reserva", b =>
                {
                    b.HasOne("AT.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AT.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany()
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AT.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AT.Models.PacoteTuristico", b =>
                {
                    b.Navigation("Destinos");
                });
#pragma warning restore 612, 618
        }
    }
}
